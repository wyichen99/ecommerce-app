{"ast":null,"code":"var _jsxFileName = \"/Users/wangyichen/Desktop/career/innocaption/ecommerce-app/src/cartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  // Initialize cart items from localStorage or set to an empty array\n  const [cartItems, setCartItems] = useState(() => {\n    try {\n      const items = localStorage.getItem('cartItems');\n      return items ? JSON.parse(items) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  // Save cart items to localStorage when cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = product => {\n    setCartItems(prevItems => {\n      const itemExists = prevItems.find(item => item.id === product.id);\n      if (itemExists) {\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: (item.quantity || 1) + 1\n        } : item);\n      }\n      return [...prevItems, {\n        ...product,\n        quantity: 1\n      }];\n    });\n  };\n  const removeFromCart = id => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"BDsMkJLWUfoIJK4gp9QWiYqFt7I=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cartItems","setCartItems","items","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","prevItems","itemExists","find","item","id","map","quantity","removeFromCart","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/wangyichen/Desktop/career/innocaption/ecommerce-app/src/cartContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst CartContext = createContext();\n\n// Custom hook to use the cart context\nexport const useCart = () => useContext(CartContext);\n\nexport const CartProvider = ({ children }) => {\n  // Initialize cart items from localStorage or set to an empty array\n  const [cartItems, setCartItems] = useState(() => {\n    try {\n      const items = localStorage.getItem('cartItems');\n      return items ? JSON.parse(items) : [];\n    } catch {\n      return [];\n    }\n  });\n\n  // Save cart items to localStorage when cartItems changes\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const addToCart = (product) => {\n    setCartItems((prevItems) => {\n      const itemExists = prevItems.find(item => item.id === product.id);\n      if (itemExists) {\n        return prevItems.map(item => item.id === product.id ? { ...item, quantity: (item.quantity || 1) + 1 } : item);\n      }\n      return [...prevItems, { ...product, quantity: 1 }];\n    });\n  };\n\n  const removeFromCart = (id) => {\n    setCartItems((prevItems) => prevItems.filter(item => item.id !== id));\n  };\n\n\n  return (\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\n      {children}\n    </CartContext.Provider>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;;AAEnC;AACA,OAAO,MAAMO,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,MAAM;IAC/C,IAAI;MACF,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAC/C,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;IACvC,CAAC,CAAC,MAAM;MACN,OAAO,EAAE;IACX;EACF,CAAC,CAAC;;EAEF;EACAZ,SAAS,CAAC,MAAM;IACda,YAAY,CAACI,OAAO,CAAC,WAAW,EAAEF,IAAI,CAACG,SAAS,CAACR,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,SAAS,GAAIC,OAAO,IAAK;IAC7BT,YAAY,CAAEU,SAAS,IAAK;MAC1B,MAAMC,UAAU,GAAGD,SAAS,CAACE,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,CAAC;MACjE,IAAIH,UAAU,EAAE;QACd,OAAOD,SAAS,CAACK,GAAG,CAACF,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,OAAO,CAACK,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEG,QAAQ,EAAE,CAACH,IAAI,CAACG,QAAQ,IAAI,CAAC,IAAI;QAAE,CAAC,GAAGH,IAAI,CAAC;MAC/G;MACA,OAAO,CAAC,GAAGH,SAAS,EAAE;QAAE,GAAGD,OAAO;QAAEO,QAAQ,EAAE;MAAE,CAAC,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIH,EAAE,IAAK;IAC7Bd,YAAY,CAAEU,SAAS,IAAKA,SAAS,CAACQ,MAAM,CAACL,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EACvE,CAAC;EAGD,oBACEtB,OAAA,CAACC,WAAW,CAAC0B,QAAQ;IAACC,KAAK,EAAE;MAAErB,SAAS;MAAES,SAAS;MAAES;IAAe,CAAE;IAAApB,QAAA,EACnEA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CApCWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}